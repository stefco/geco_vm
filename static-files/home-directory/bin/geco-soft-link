#!/bin/bash

# link executables from cloned geco software repositories to ~/bin

set -o nounset
set -o errexit

usage () {
    cat <<USAGE
USAGE: geco-soft-link [ -h ]

Symbolically link executables from cloned GECo software repositories to ~/bin.
This makes it easy to update software by pulling updates to those
repositories. It also makes it easy to develop programs interactively.

OPTIONS:

    -h      show this help dialog

USAGE
}

# an array of executables and their respective repository names to clone. this
# script will search for these files in ~/geco.
executables=(
    "geco_data/geco_dump"
    "geco_data/geco_trend_dump"
    "geco_data/geco_get_operational_segments"
    "geco_data/geco_irig_decode"
    "geco_data/geco_irig_decode_test"
    "geco_data/geco_irig_plot"
    "geco_data/geco_zip"
    "geco_plots/make_timediff_plot.py"
)

link_executable () {
    local executable_path="$1"
    local executable="$(sed 's_^[^/]*/\(.*\)$_\1_' <<<"${executable_path}")"
    mkdir -p "${HOME}"/bin
    if [ -e "${HOME}"/geco/"${executable_path}" ]; then
        if [ -e "${HOME}"/bin/"${executable}" ]; then
            echo "# ~/bin/${executable} exists, skipping."
        else
            ln -s "${HOME}"/geco/"${executable_path}" "${HOME}"/bin/"${executable}"
            chmod +x "${HOME}"/bin/"${executable}"
            echo "# successfully linked ${executable_path}"
        fi
    else
        echo "# could not find ~/${executable_path}; exiting"
        exit 1
    fi
}

for executable in ${executables[*]}; do
    link_executable "${executable}"
done
